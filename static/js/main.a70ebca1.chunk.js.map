{"version":3,"sources":["assets/dumbbell-logo.svg","components/login/index.tsx","libs/hooksLib.ts","App.tsx","index.tsx"],"names":["module","exports","Login","initialState","useState","fields","setValues","event","target","id","value","useFormFields","email","password","handleFieldChange","errors","setErrors","onSubmit","preventDefault","formIsValid","RegExp","test","passwordPattern","match","validateForm","setTimeout","alert","e","message","className","src","Logo","alt","name","placeholder","type","onChange","title","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,2C,0LC2G5BC,G,MArGG,WAAO,IAAD,ECJjB,SAAuBC,GAAoB,IAAD,EACjBC,mBAASD,GADQ,mBACtCE,EADsC,KAC9BC,EAD8B,KAG7C,MAAO,CACHD,EACA,SAACE,GACGD,EAAU,2BACHD,GADE,kBAEJE,EAAMC,OAAOC,GAAKF,EAAMC,OAAOE,WDHRC,CAAc,CAC9CC,MAAO,GACPC,SAAU,KAHM,mBACbR,EADa,KACLS,EADK,OAWQV,mBALD,CACvBQ,MAAO,GACPC,SAAU,KARM,mBAWbE,EAXa,KAWLC,EAXK,KA6DpB,OACI,0BAAMC,SAdW,SAACV,GAElB,GADAA,EAAMW,iBApCW,WACjB,IAAMH,EAAS,CACXH,MAAO,GACPC,SAAU,IAGVM,GAAc,EACbd,EAAOO,MAKa,IAAIQ,OACrB,mSAEcC,KAAKhB,EAAOO,SAC1BO,GAAc,EACdJ,EAAOH,MAAQ,kEATnBO,GAAc,EACdJ,EAAOH,MAAQ,yBAWnB,GAAKP,EAAOQ,SAGL,CAEH,IAAMS,EAAkB,IAAIF,OAAO,8DAC9Bf,EAAOQ,SAASU,MAAMD,KACvBH,GAAc,EACdJ,EAAOF,SAAW,0FAPtBM,GAAc,EACdJ,EAAOF,SAAW,2BAUtB,OADAG,EAAUD,GACHI,EAKHK,GACA,IACIC,YAAW,WACPC,MAAM,oBACP,KACL,MAAOC,GACLD,MAAMC,EAAEC,WAMcC,UAAU,eACpC,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OAAOC,IAAKC,IAAMC,IAAI,SACrC,yBAAKH,UAAU,SAAf,YAEJ,yBAAKA,UAAU,gBACX,2BACIpB,GAAG,QACHwB,KAAK,QACLC,YAAY,QACZC,KAAK,OACLzB,MAAOL,EAAOO,MACdwB,SAAUtB,EACVe,WAAW,OAACd,QAAD,IAACA,OAAD,EAACA,EAAQH,OAAa,QAAL,GAC5ByB,OAAO,OAACtB,QAAD,IAACA,OAAD,EAACA,EAAQH,OAAT,OAAsBG,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAQH,MAAb,KAE5B,2BACIH,GAAG,WACHwB,KAAK,WACLC,YAAY,WACZC,KAAK,WACLzB,MAAOL,EAAOQ,SACduB,SAAUtB,EACVe,WAAW,OAACd,QAAD,IAACA,OAAD,EAACA,EAAQF,UAAgB,QAAL,GAC/BwB,OAAO,OAACtB,QAAD,IAACA,OAAD,EAACA,EAAQF,UAAT,OAAyBE,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAQF,SAAb,KAE/B,yBAAKgB,UAAU,eACX,uBAAGS,KAAK,KAAR,qBACA,4BAAQT,UAAU,UAAlB,YAEJ,wBAAIA,UAAU,cACH,OAANd,QAAM,IAANA,OAAA,EAAAA,EAAQH,OAAQ,4BAAKG,EAAOH,OAAc,IACpC,OAANG,QAAM,IAANA,OAAA,EAAAA,EAAQF,UAAW,4BAAKE,EAAOF,UAAiB,Q,MErFtD0B,MAVf,WACI,OACI,yBAAKV,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,SCLhBW,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.a70ebca1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dumbbell-logo.d1459307.svg\";","import React, { FC, useState, FormEvent } from \"react\";\nimport { useFormFields } from \"../../libs/hooksLib\";\nimport Logo from \"../../assets/dumbbell-logo.svg\";\n\nimport \"./Login.css\";\n\nconst Login: FC = () => {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\",\n    });\n\n    const errorsInitialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const [errors, setErrors] = useState(errorsInitialState);\n\n    const validateForm = () => {\n        const errors = {\n            email: \"\",\n            password: \"\",\n        };\n\n        let formIsValid = true;\n        if (!fields.email) {\n            formIsValid = false;\n            errors.email = \"* Please enter email.\";\n        } else {\n            // regular expression for email validation\n            const emailPattern = new RegExp(\n                /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n            );\n            if (!emailPattern.test(fields.email)) {\n                formIsValid = false;\n                errors.email = \"* Please enter valid email in the format <email>@<domain>.com\";\n            }\n        }\n        if (!fields.password) {\n            formIsValid = false;\n            errors.password = \"* Please enter password.\";\n        } else {\n            // regular expression for password validation\n            const passwordPattern = new RegExp(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/);\n            if (!fields.password.match(passwordPattern)) {\n                formIsValid = false;\n                errors.password = \"* Please enter password of length 8 and at-least 1 special character + upper case\";\n            }\n        }\n        setErrors(errors);\n        return formIsValid;\n    };\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (validateForm()) {\n            try {\n                setTimeout(() => {\n                    alert(\"Form submitted\");\n                }, 3000);\n            } catch (e) {\n                alert(e.message);\n            }\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"custom-form\">\n            <div className=\"form-head\">\n                <img className=\"logo\" src={Logo} alt=\"logo\" />\n                <div className=\"title\">Sign in</div>\n            </div>\n            <div className=\"form-content\">\n                <input\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    type=\"text\"\n                    value={fields.email}\n                    onChange={handleFieldChange}\n                    className={!errors?.email ? \"\" : \"error\"}\n                    title={!errors?.email ? \"\" : errors?.email}\n                />\n                <input\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    value={fields.password}\n                    onChange={handleFieldChange}\n                    className={!errors?.password ? \"\" : \"error\"}\n                    title={!errors?.password ? \"\" : errors?.password}\n                />\n                <div className=\"form-footer\">\n                    <a href=\"#\">Create an account</a>\n                    <button className=\"button\">Log in </button>\n                </div>\n                <ul className=\"error-box\">\n                    {errors?.email ? <li>{errors.email}</li> : \"\"}\n                    {errors?.password ? <li>{errors.password}</li> : \"\"}\n                </ul>\n            </div>\n        </form>\n    );\n};\n\nexport default Login;\n","import { useState, ChangeEvent } from \"react\";\n\nexport function useFormFields(initialState: any) {\n    const [fields, setValues] = useState(initialState);\n\n    return [\n        fields,\n        (event: ChangeEvent<HTMLInputElement>) => {\n            setValues({\n                ...fields,\n                [event.target.id]: event.target.value,\n            });\n        },\n    ];\n}\n","import React from \"react\";\nimport Login from \"./components/login\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div className=\"container\">\n                <Login />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}